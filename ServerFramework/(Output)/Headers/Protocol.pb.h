// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Protocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Protocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Protocol_2eproto;
class CS_LOGIN;
struct CS_LOGINDefaultTypeInternal;
extern CS_LOGINDefaultTypeInternal _CS_LOGIN_default_instance_;
class CS_LOGOUT;
struct CS_LOGOUTDefaultTypeInternal;
extern CS_LOGOUTDefaultTypeInternal _CS_LOGOUT_default_instance_;
class CS_MOVE;
struct CS_MOVEDefaultTypeInternal;
extern CS_MOVEDefaultTypeInternal _CS_MOVE_default_instance_;
class POSITION;
struct POSITIONDefaultTypeInternal;
extern POSITIONDefaultTypeInternal _POSITION_default_instance_;
class SC_CHECKLOGIN;
struct SC_CHECKLOGINDefaultTypeInternal;
extern SC_CHECKLOGINDefaultTypeInternal _SC_CHECKLOGIN_default_instance_;
class SC_POS;
struct SC_POSDefaultTypeInternal;
extern SC_POSDefaultTypeInternal _SC_POS_default_instance_;
class SC_PUT_OBJECT;
struct SC_PUT_OBJECTDefaultTypeInternal;
extern SC_PUT_OBJECTDefaultTypeInternal _SC_PUT_OBJECT_default_instance_;
class SC_REMOVE_OBJECT;
struct SC_REMOVE_OBJECTDefaultTypeInternal;
extern SC_REMOVE_OBJECTDefaultTypeInternal _SC_REMOVE_OBJECT_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum Direction : int {
  UP = 0,
  DOWN = 1,
  LEFT = 2,
  RIGHT = 3,
  Direction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Direction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Direction_IsValid(int value);
extern const uint32_t Direction_internal_data_[];
constexpr Direction Direction_MIN = static_cast<Direction>(0);
constexpr Direction Direction_MAX = static_cast<Direction>(3);
constexpr int Direction_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Direction_descriptor();
template <typename T>
const std::string& Direction_Name(T value) {
  static_assert(std::is_same<T, Direction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Direction_Name().");
  return Direction_Name(static_cast<Direction>(value));
}
template <>
inline const std::string& Direction_Name(Direction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Direction_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Direction_Parse(absl::string_view name, Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Direction>(
      Direction_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SC_REMOVE_OBJECT final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_REMOVE_OBJECT) */ {
 public:
  inline SC_REMOVE_OBJECT() : SC_REMOVE_OBJECT(nullptr) {}
  ~SC_REMOVE_OBJECT() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_REMOVE_OBJECT(::google::protobuf::internal::ConstantInitialized);

  inline SC_REMOVE_OBJECT(const SC_REMOVE_OBJECT& from)
      : SC_REMOVE_OBJECT(nullptr, from) {}
  SC_REMOVE_OBJECT(SC_REMOVE_OBJECT&& from) noexcept
    : SC_REMOVE_OBJECT() {
    *this = ::std::move(from);
  }

  inline SC_REMOVE_OBJECT& operator=(const SC_REMOVE_OBJECT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_REMOVE_OBJECT& operator=(SC_REMOVE_OBJECT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_REMOVE_OBJECT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_REMOVE_OBJECT* internal_default_instance() {
    return reinterpret_cast<const SC_REMOVE_OBJECT*>(
               &_SC_REMOVE_OBJECT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SC_REMOVE_OBJECT& a, SC_REMOVE_OBJECT& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_REMOVE_OBJECT* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_REMOVE_OBJECT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_REMOVE_OBJECT* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_REMOVE_OBJECT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_REMOVE_OBJECT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_REMOVE_OBJECT& from) {
    SC_REMOVE_OBJECT::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_REMOVE_OBJECT* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_REMOVE_OBJECT";
  }
  protected:
  explicit SC_REMOVE_OBJECT(::google::protobuf::Arena* arena);
  SC_REMOVE_OBJECT(::google::protobuf::Arena* arena, const SC_REMOVE_OBJECT& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_REMOVE_OBJECT)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_CHECKLOGIN final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CHECKLOGIN) */ {
 public:
  inline SC_CHECKLOGIN() : SC_CHECKLOGIN(nullptr) {}
  ~SC_CHECKLOGIN() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_CHECKLOGIN(::google::protobuf::internal::ConstantInitialized);

  inline SC_CHECKLOGIN(const SC_CHECKLOGIN& from)
      : SC_CHECKLOGIN(nullptr, from) {}
  SC_CHECKLOGIN(SC_CHECKLOGIN&& from) noexcept
    : SC_CHECKLOGIN() {
    *this = ::std::move(from);
  }

  inline SC_CHECKLOGIN& operator=(const SC_CHECKLOGIN& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_CHECKLOGIN& operator=(SC_CHECKLOGIN&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_CHECKLOGIN& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_CHECKLOGIN* internal_default_instance() {
    return reinterpret_cast<const SC_CHECKLOGIN*>(
               &_SC_CHECKLOGIN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SC_CHECKLOGIN& a, SC_CHECKLOGIN& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_CHECKLOGIN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_CHECKLOGIN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_CHECKLOGIN* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_CHECKLOGIN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_CHECKLOGIN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_CHECKLOGIN& from) {
    SC_CHECKLOGIN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_CHECKLOGIN* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_CHECKLOGIN";
  }
  protected:
  explicit SC_CHECKLOGIN(::google::protobuf::Arena* arena);
  SC_CHECKLOGIN(::google::protobuf::Arena* arena, const SC_CHECKLOGIN& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_CHECKLOGIN)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class POSITION final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POSITION) */ {
 public:
  inline POSITION() : POSITION(nullptr) {}
  ~POSITION() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR POSITION(::google::protobuf::internal::ConstantInitialized);

  inline POSITION(const POSITION& from)
      : POSITION(nullptr, from) {}
  POSITION(POSITION&& from) noexcept
    : POSITION() {
    *this = ::std::move(from);
  }

  inline POSITION& operator=(const POSITION& from) {
    CopyFrom(from);
    return *this;
  }
  inline POSITION& operator=(POSITION&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const POSITION& default_instance() {
    return *internal_default_instance();
  }
  static inline const POSITION* internal_default_instance() {
    return reinterpret_cast<const POSITION*>(
               &_POSITION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(POSITION& a, POSITION& b) {
    a.Swap(&b);
  }
  inline void Swap(POSITION* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(POSITION* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  POSITION* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<POSITION>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const POSITION& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const POSITION& from) {
    POSITION::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(POSITION* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "POSITION";
  }
  protected:
  explicit POSITION(::google::protobuf::Arena* arena);
  POSITION(::google::protobuf::Arena* arena, const POSITION& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:POSITION)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float x_;
    float y_;
    float z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CS_MOVE final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_MOVE) */ {
 public:
  inline CS_MOVE() : CS_MOVE(nullptr) {}
  ~CS_MOVE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CS_MOVE(::google::protobuf::internal::ConstantInitialized);

  inline CS_MOVE(const CS_MOVE& from)
      : CS_MOVE(nullptr, from) {}
  CS_MOVE(CS_MOVE&& from) noexcept
    : CS_MOVE() {
    *this = ::std::move(from);
  }

  inline CS_MOVE& operator=(const CS_MOVE& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_MOVE& operator=(CS_MOVE&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_MOVE& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_MOVE* internal_default_instance() {
    return reinterpret_cast<const CS_MOVE*>(
               &_CS_MOVE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CS_MOVE& a, CS_MOVE& b) {
    a.Swap(&b);
  }
  inline void Swap(CS_MOVE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_MOVE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_MOVE* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CS_MOVE>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_MOVE& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CS_MOVE& from) {
    CS_MOVE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CS_MOVE* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CS_MOVE";
  }
  protected:
  explicit CS_MOVE(::google::protobuf::Arena* arena);
  CS_MOVE(::google::protobuf::Arena* arena, const CS_MOVE& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMoveTimeFieldNumber = 2,
    kDirFieldNumber = 1,
  };
  // int64 move_time = 2;
  void clear_move_time() ;
  ::int64_t move_time() const;
  void set_move_time(::int64_t value);

  private:
  ::int64_t _internal_move_time() const;
  void _internal_set_move_time(::int64_t value);

  public:
  // .Direction dir = 1;
  void clear_dir() ;
  ::Direction dir() const;
  void set_dir(::Direction value);

  private:
  ::Direction _internal_dir() const;
  void _internal_set_dir(::Direction value);

  public:
  // @@protoc_insertion_point(class_scope:CS_MOVE)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t move_time_;
    int dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CS_LOGOUT final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LOGOUT) */ {
 public:
  inline CS_LOGOUT() : CS_LOGOUT(nullptr) {}
  ~CS_LOGOUT() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CS_LOGOUT(::google::protobuf::internal::ConstantInitialized);

  inline CS_LOGOUT(const CS_LOGOUT& from)
      : CS_LOGOUT(nullptr, from) {}
  CS_LOGOUT(CS_LOGOUT&& from) noexcept
    : CS_LOGOUT() {
    *this = ::std::move(from);
  }

  inline CS_LOGOUT& operator=(const CS_LOGOUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_LOGOUT& operator=(CS_LOGOUT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_LOGOUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_LOGOUT* internal_default_instance() {
    return reinterpret_cast<const CS_LOGOUT*>(
               &_CS_LOGOUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CS_LOGOUT& a, CS_LOGOUT& b) {
    a.Swap(&b);
  }
  inline void Swap(CS_LOGOUT* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_LOGOUT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_LOGOUT* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CS_LOGOUT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_LOGOUT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CS_LOGOUT& from) {
    CS_LOGOUT::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CS_LOGOUT* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CS_LOGOUT";
  }
  protected:
  explicit CS_LOGOUT(::google::protobuf::Arena* arena);
  CS_LOGOUT(::google::protobuf::Arena* arena, const CS_LOGOUT& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CS_LOGOUT)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CS_LOGIN final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LOGIN) */ {
 public:
  inline CS_LOGIN() : CS_LOGIN(nullptr) {}
  ~CS_LOGIN() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CS_LOGIN(::google::protobuf::internal::ConstantInitialized);

  inline CS_LOGIN(const CS_LOGIN& from)
      : CS_LOGIN(nullptr, from) {}
  CS_LOGIN(CS_LOGIN&& from) noexcept
    : CS_LOGIN() {
    *this = ::std::move(from);
  }

  inline CS_LOGIN& operator=(const CS_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_LOGIN& operator=(CS_LOGIN&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_LOGIN& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_LOGIN* internal_default_instance() {
    return reinterpret_cast<const CS_LOGIN*>(
               &_CS_LOGIN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CS_LOGIN& a, CS_LOGIN& b) {
    a.Swap(&b);
  }
  inline void Swap(CS_LOGIN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_LOGIN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_LOGIN* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CS_LOGIN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_LOGIN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CS_LOGIN& from) {
    CS_LOGIN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CS_LOGIN* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CS_LOGIN";
  }
  protected:
  explicit CS_LOGIN(::google::protobuf::Arena* arena);
  CS_LOGIN(::google::protobuf::Arena* arena, const CS_LOGIN& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserNameFieldNumber = 1,
  };
  // string user_name = 1;
  void clear_user_name() ;
  const std::string& user_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_name(Arg_&& arg, Args_... args);
  std::string* mutable_user_name();
  PROTOBUF_NODISCARD std::string* release_user_name();
  void set_allocated_user_name(std::string* value);

  private:
  const std::string& _internal_user_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_name(
      const std::string& value);
  std::string* _internal_mutable_user_name();

  public:
  // @@protoc_insertion_point(class_scope:CS_LOGIN)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      26, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr user_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_PUT_OBJECT final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_PUT_OBJECT) */ {
 public:
  inline SC_PUT_OBJECT() : SC_PUT_OBJECT(nullptr) {}
  ~SC_PUT_OBJECT() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_PUT_OBJECT(::google::protobuf::internal::ConstantInitialized);

  inline SC_PUT_OBJECT(const SC_PUT_OBJECT& from)
      : SC_PUT_OBJECT(nullptr, from) {}
  SC_PUT_OBJECT(SC_PUT_OBJECT&& from) noexcept
    : SC_PUT_OBJECT() {
    *this = ::std::move(from);
  }

  inline SC_PUT_OBJECT& operator=(const SC_PUT_OBJECT& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_PUT_OBJECT& operator=(SC_PUT_OBJECT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_PUT_OBJECT& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_PUT_OBJECT* internal_default_instance() {
    return reinterpret_cast<const SC_PUT_OBJECT*>(
               &_SC_PUT_OBJECT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SC_PUT_OBJECT& a, SC_PUT_OBJECT& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_PUT_OBJECT* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_PUT_OBJECT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_PUT_OBJECT* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_PUT_OBJECT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_PUT_OBJECT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_PUT_OBJECT& from) {
    SC_PUT_OBJECT::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_PUT_OBJECT* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_PUT_OBJECT";
  }
  protected:
  explicit SC_PUT_OBJECT(::google::protobuf::Arena* arena);
  SC_PUT_OBJECT(::google::protobuf::Arena* arena, const SC_PUT_OBJECT& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 2,
    kIdFieldNumber = 1,
    kOTypeFieldNumber = 3,
  };
  // .POSITION pos = 2;
  bool has_pos() const;
  void clear_pos() ;
  const ::POSITION& pos() const;
  PROTOBUF_NODISCARD ::POSITION* release_pos();
  ::POSITION* mutable_pos();
  void set_allocated_pos(::POSITION* value);
  void unsafe_arena_set_allocated_pos(::POSITION* value);
  ::POSITION* unsafe_arena_release_pos();

  private:
  const ::POSITION& _internal_pos() const;
  ::POSITION* _internal_mutable_pos();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int32 o_type = 3;
  void clear_o_type() ;
  ::int32_t o_type() const;
  void set_o_type(::int32_t value);

  private:
  ::int32_t _internal_o_type() const;
  void _internal_set_o_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_PUT_OBJECT)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::POSITION* pos_;
    ::int64_t id_;
    ::int32_t o_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_POS final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_POS) */ {
 public:
  inline SC_POS() : SC_POS(nullptr) {}
  ~SC_POS() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_POS(::google::protobuf::internal::ConstantInitialized);

  inline SC_POS(const SC_POS& from)
      : SC_POS(nullptr, from) {}
  SC_POS(SC_POS&& from) noexcept
    : SC_POS() {
    *this = ::std::move(from);
  }

  inline SC_POS& operator=(const SC_POS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_POS& operator=(SC_POS&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_POS& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_POS* internal_default_instance() {
    return reinterpret_cast<const SC_POS*>(
               &_SC_POS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SC_POS& a, SC_POS& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_POS* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_POS* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_POS* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_POS>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_POS& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_POS& from) {
    SC_POS::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_POS* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_POS";
  }
  protected:
  explicit SC_POS(::google::protobuf::Arena* arena);
  SC_POS(::google::protobuf::Arena* arena, const SC_POS& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 2,
    kIdFieldNumber = 1,
    kMoveTimeFieldNumber = 3,
  };
  // .POSITION pos = 2;
  bool has_pos() const;
  void clear_pos() ;
  const ::POSITION& pos() const;
  PROTOBUF_NODISCARD ::POSITION* release_pos();
  ::POSITION* mutable_pos();
  void set_allocated_pos(::POSITION* value);
  void unsafe_arena_set_allocated_pos(::POSITION* value);
  ::POSITION* unsafe_arena_release_pos();

  private:
  const ::POSITION& _internal_pos() const;
  ::POSITION* _internal_mutable_pos();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 move_time = 3;
  void clear_move_time() ;
  ::int64_t move_time() const;
  void set_move_time(::int64_t value);

  private:
  ::int64_t _internal_move_time() const;
  void _internal_set_move_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_POS)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::POSITION* pos_;
    ::int64_t id_;
    ::int64_t move_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// POSITION

// float x = 1;
inline void POSITION::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline float POSITION::x() const {
  // @@protoc_insertion_point(field_get:POSITION.x)
  return _internal_x();
}
inline void POSITION::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:POSITION.x)
}
inline float POSITION::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void POSITION::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float y = 2;
inline void POSITION::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline float POSITION::y() const {
  // @@protoc_insertion_point(field_get:POSITION.y)
  return _internal_y();
}
inline void POSITION::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:POSITION.y)
}
inline float POSITION::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void POSITION::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// float z = 3;
inline void POSITION::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline float POSITION::z() const {
  // @@protoc_insertion_point(field_get:POSITION.z)
  return _internal_z();
}
inline void POSITION::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:POSITION.z)
}
inline float POSITION::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void POSITION::_internal_set_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// SC_CHECKLOGIN

// int64 id = 1;
inline void SC_CHECKLOGIN::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_CHECKLOGIN::id() const {
  // @@protoc_insertion_point(field_get:SC_CHECKLOGIN.id)
  return _internal_id();
}
inline void SC_CHECKLOGIN::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_CHECKLOGIN.id)
}
inline ::int64_t SC_CHECKLOGIN::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_CHECKLOGIN::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// SC_POS

// int64 id = 1;
inline void SC_POS::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_POS::id() const {
  // @@protoc_insertion_point(field_get:SC_POS.id)
  return _internal_id();
}
inline void SC_POS::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_POS.id)
}
inline ::int64_t SC_POS::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_POS::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .POSITION pos = 2;
inline bool SC_POS::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void SC_POS::clear_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::POSITION& SC_POS::_internal_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::POSITION* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::POSITION&>(::_POSITION_default_instance_);
}
inline const ::POSITION& SC_POS::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SC_POS.pos)
  return _internal_pos();
}
inline void SC_POS::unsafe_arena_set_allocated_pos(::POSITION* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::POSITION*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SC_POS.pos)
}
inline ::POSITION* SC_POS::release_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::POSITION* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::POSITION* SC_POS::unsafe_arena_release_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SC_POS.pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::POSITION* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::POSITION* SC_POS::_internal_mutable_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::POSITION>(GetArena());
    _impl_.pos_ = reinterpret_cast<::POSITION*>(p);
  }
  return _impl_.pos_;
}
inline ::POSITION* SC_POS::mutable_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::POSITION* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:SC_POS.pos)
  return _msg;
}
inline void SC_POS::set_allocated_pos(::POSITION* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::POSITION*>(_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::POSITION*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pos_ = reinterpret_cast<::POSITION*>(value);
  // @@protoc_insertion_point(field_set_allocated:SC_POS.pos)
}

// int64 move_time = 3;
inline void SC_POS::clear_move_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.move_time_ = ::int64_t{0};
}
inline ::int64_t SC_POS::move_time() const {
  // @@protoc_insertion_point(field_get:SC_POS.move_time)
  return _internal_move_time();
}
inline void SC_POS::set_move_time(::int64_t value) {
  _internal_set_move_time(value);
  // @@protoc_insertion_point(field_set:SC_POS.move_time)
}
inline ::int64_t SC_POS::_internal_move_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.move_time_;
}
inline void SC_POS::_internal_set_move_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.move_time_ = value;
}

// -------------------------------------------------------------------

// SC_PUT_OBJECT

// int64 id = 1;
inline void SC_PUT_OBJECT::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_PUT_OBJECT::id() const {
  // @@protoc_insertion_point(field_get:SC_PUT_OBJECT.id)
  return _internal_id();
}
inline void SC_PUT_OBJECT::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_PUT_OBJECT.id)
}
inline ::int64_t SC_PUT_OBJECT::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_PUT_OBJECT::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .POSITION pos = 2;
inline bool SC_PUT_OBJECT::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void SC_PUT_OBJECT::clear_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::POSITION& SC_PUT_OBJECT::_internal_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::POSITION* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::POSITION&>(::_POSITION_default_instance_);
}
inline const ::POSITION& SC_PUT_OBJECT::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SC_PUT_OBJECT.pos)
  return _internal_pos();
}
inline void SC_PUT_OBJECT::unsafe_arena_set_allocated_pos(::POSITION* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::POSITION*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SC_PUT_OBJECT.pos)
}
inline ::POSITION* SC_PUT_OBJECT::release_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::POSITION* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::POSITION* SC_PUT_OBJECT::unsafe_arena_release_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SC_PUT_OBJECT.pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::POSITION* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::POSITION* SC_PUT_OBJECT::_internal_mutable_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::POSITION>(GetArena());
    _impl_.pos_ = reinterpret_cast<::POSITION*>(p);
  }
  return _impl_.pos_;
}
inline ::POSITION* SC_PUT_OBJECT::mutable_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::POSITION* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:SC_PUT_OBJECT.pos)
  return _msg;
}
inline void SC_PUT_OBJECT::set_allocated_pos(::POSITION* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::POSITION*>(_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::POSITION*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pos_ = reinterpret_cast<::POSITION*>(value);
  // @@protoc_insertion_point(field_set_allocated:SC_PUT_OBJECT.pos)
}

// int32 o_type = 3;
inline void SC_PUT_OBJECT::clear_o_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_type_ = 0;
}
inline ::int32_t SC_PUT_OBJECT::o_type() const {
  // @@protoc_insertion_point(field_get:SC_PUT_OBJECT.o_type)
  return _internal_o_type();
}
inline void SC_PUT_OBJECT::set_o_type(::int32_t value) {
  _internal_set_o_type(value);
  // @@protoc_insertion_point(field_set:SC_PUT_OBJECT.o_type)
}
inline ::int32_t SC_PUT_OBJECT::_internal_o_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_type_;
}
inline void SC_PUT_OBJECT::_internal_set_o_type(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_type_ = value;
}

// -------------------------------------------------------------------

// SC_REMOVE_OBJECT

// int64 id = 1;
inline void SC_REMOVE_OBJECT::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_REMOVE_OBJECT::id() const {
  // @@protoc_insertion_point(field_get:SC_REMOVE_OBJECT.id)
  return _internal_id();
}
inline void SC_REMOVE_OBJECT::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_REMOVE_OBJECT.id)
}
inline ::int64_t SC_REMOVE_OBJECT::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_REMOVE_OBJECT::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// CS_LOGIN

// string user_name = 1;
inline void CS_LOGIN::clear_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_name_.ClearToEmpty();
}
inline const std::string& CS_LOGIN::user_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CS_LOGIN.user_name)
  return _internal_user_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CS_LOGIN::set_user_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CS_LOGIN.user_name)
}
inline std::string* CS_LOGIN::mutable_user_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_name();
  // @@protoc_insertion_point(field_mutable:CS_LOGIN.user_name)
  return _s;
}
inline const std::string& CS_LOGIN::_internal_user_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_name_.Get();
}
inline void CS_LOGIN::_internal_set_user_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_name_.Set(value, GetArena());
}
inline std::string* CS_LOGIN::_internal_mutable_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.user_name_.Mutable( GetArena());
}
inline std::string* CS_LOGIN::release_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CS_LOGIN.user_name)
  return _impl_.user_name_.Release();
}
inline void CS_LOGIN::set_allocated_user_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_name_.IsDefault()) {
          _impl_.user_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CS_LOGIN.user_name)
}

// -------------------------------------------------------------------

// CS_MOVE

// .Direction dir = 1;
inline void CS_MOVE::clear_dir() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dir_ = 0;
}
inline ::Direction CS_MOVE::dir() const {
  // @@protoc_insertion_point(field_get:CS_MOVE.dir)
  return _internal_dir();
}
inline void CS_MOVE::set_dir(::Direction value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:CS_MOVE.dir)
}
inline ::Direction CS_MOVE::_internal_dir() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Direction>(_impl_.dir_);
}
inline void CS_MOVE::_internal_set_dir(::Direction value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dir_ = value;
}

// int64 move_time = 2;
inline void CS_MOVE::clear_move_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.move_time_ = ::int64_t{0};
}
inline ::int64_t CS_MOVE::move_time() const {
  // @@protoc_insertion_point(field_get:CS_MOVE.move_time)
  return _internal_move_time();
}
inline void CS_MOVE::set_move_time(::int64_t value) {
  _internal_set_move_time(value);
  // @@protoc_insertion_point(field_set:CS_MOVE.move_time)
}
inline ::int64_t CS_MOVE::_internal_move_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.move_time_;
}
inline void CS_MOVE::_internal_set_move_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.move_time_ = value;
}

// -------------------------------------------------------------------

// CS_LOGOUT

// int64 id = 1;
inline void CS_LOGOUT::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CS_LOGOUT::id() const {
  // @@protoc_insertion_point(field_get:CS_LOGOUT.id)
  return _internal_id();
}
inline void CS_LOGOUT::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CS_LOGOUT.id)
}
inline ::int64_t CS_LOGOUT::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CS_LOGOUT::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Direction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Direction>() {
  return ::Direction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
