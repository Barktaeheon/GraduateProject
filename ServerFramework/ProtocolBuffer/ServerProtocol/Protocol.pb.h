// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Protocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Protocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Protocol_2eproto;
class CHARSTATE;
struct CHARSTATEDefaultTypeInternal;
extern CHARSTATEDefaultTypeInternal _CHARSTATE_default_instance_;
class COLLISIONDATA;
struct COLLISIONDATADefaultTypeInternal;
extern COLLISIONDATADefaultTypeInternal _COLLISIONDATA_default_instance_;
class CS_ATTACK;
struct CS_ATTACKDefaultTypeInternal;
extern CS_ATTACKDefaultTypeInternal _CS_ATTACK_default_instance_;
class CS_DISCONNECT;
struct CS_DISCONNECTDefaultTypeInternal;
extern CS_DISCONNECTDefaultTypeInternal _CS_DISCONNECT_default_instance_;
class CS_LOGIN;
struct CS_LOGINDefaultTypeInternal;
extern CS_LOGINDefaultTypeInternal _CS_LOGIN_default_instance_;
class EQINFO;
struct EQINFODefaultTypeInternal;
extern EQINFODefaultTypeInternal _EQINFO_default_instance_;
class MOBSTATE;
struct MOBSTATEDefaultTypeInternal;
extern MOBSTATEDefaultTypeInternal _MOBSTATE_default_instance_;
class SC_CONNECTSUCCESS;
struct SC_CONNECTSUCCESSDefaultTypeInternal;
extern SC_CONNECTSUCCESSDefaultTypeInternal _SC_CONNECTSUCCESS_default_instance_;
class SC_DAMAGED;
struct SC_DAMAGEDDefaultTypeInternal;
extern SC_DAMAGEDDefaultTypeInternal _SC_DAMAGED_default_instance_;
class SC_MONSTERFIND;
struct SC_MONSTERFINDDefaultTypeInternal;
extern SC_MONSTERFINDDefaultTypeInternal _SC_MONSTERFIND_default_instance_;
class SC_OTHERCLIENTLOGIN;
struct SC_OTHERCLIENTLOGINDefaultTypeInternal;
extern SC_OTHERCLIENTLOGINDefaultTypeInternal _SC_OTHERCLIENTLOGIN_default_instance_;
class SC_SEEPLAYERMOVE;
struct SC_SEEPLAYERMOVEDefaultTypeInternal;
extern SC_SEEPLAYERMOVEDefaultTypeInternal _SC_SEEPLAYERMOVE_default_instance_;
class VECTOR3;
struct VECTOR3DefaultTypeInternal;
extern VECTOR3DefaultTypeInternal _VECTOR3_default_instance_;
class VECTOR4;
struct VECTOR4DefaultTypeInternal;
extern VECTOR4DefaultTypeInternal _VECTOR4_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum Direction : int {
  UP = 0,
  DOWN = 1,
  LEFT = 2,
  RIGHT = 3,
  Direction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Direction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Direction_IsValid(int value);
extern const uint32_t Direction_internal_data_[];
constexpr Direction Direction_MIN = static_cast<Direction>(0);
constexpr Direction Direction_MAX = static_cast<Direction>(3);
constexpr int Direction_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Direction_descriptor();
template <typename T>
const std::string& Direction_Name(T value) {
  static_assert(std::is_same<T, Direction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Direction_Name().");
  return Direction_Name(static_cast<Direction>(value));
}
template <>
inline const std::string& Direction_Name(Direction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Direction_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Direction_Parse(absl::string_view name, Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Direction>(
      Direction_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VECTOR4 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VECTOR4) */ {
 public:
  inline VECTOR4() : VECTOR4(nullptr) {}
  ~VECTOR4() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VECTOR4(::google::protobuf::internal::ConstantInitialized);

  inline VECTOR4(const VECTOR4& from)
      : VECTOR4(nullptr, from) {}
  VECTOR4(VECTOR4&& from) noexcept
    : VECTOR4() {
    *this = ::std::move(from);
  }

  inline VECTOR4& operator=(const VECTOR4& from) {
    CopyFrom(from);
    return *this;
  }
  inline VECTOR4& operator=(VECTOR4&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VECTOR4& default_instance() {
    return *internal_default_instance();
  }
  static inline const VECTOR4* internal_default_instance() {
    return reinterpret_cast<const VECTOR4*>(
               &_VECTOR4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(VECTOR4& a, VECTOR4& b) {
    a.Swap(&b);
  }
  inline void Swap(VECTOR4* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VECTOR4* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VECTOR4* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VECTOR4>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VECTOR4& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VECTOR4& from) {
    VECTOR4::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VECTOR4* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "VECTOR4";
  }
  protected:
  explicit VECTOR4(::google::protobuf::Arena* arena);
  VECTOR4(::google::protobuf::Arena* arena, const VECTOR4& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // float w = 4;
  void clear_w() ;
  float w() const;
  void set_w(float value);

  private:
  float _internal_w() const;
  void _internal_set_w(float value);

  public:
  // @@protoc_insertion_point(class_scope:VECTOR4)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float x_;
    float y_;
    float z_;
    float w_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class VECTOR3 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VECTOR3) */ {
 public:
  inline VECTOR3() : VECTOR3(nullptr) {}
  ~VECTOR3() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VECTOR3(::google::protobuf::internal::ConstantInitialized);

  inline VECTOR3(const VECTOR3& from)
      : VECTOR3(nullptr, from) {}
  VECTOR3(VECTOR3&& from) noexcept
    : VECTOR3() {
    *this = ::std::move(from);
  }

  inline VECTOR3& operator=(const VECTOR3& from) {
    CopyFrom(from);
    return *this;
  }
  inline VECTOR3& operator=(VECTOR3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VECTOR3& default_instance() {
    return *internal_default_instance();
  }
  static inline const VECTOR3* internal_default_instance() {
    return reinterpret_cast<const VECTOR3*>(
               &_VECTOR3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VECTOR3& a, VECTOR3& b) {
    a.Swap(&b);
  }
  inline void Swap(VECTOR3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VECTOR3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VECTOR3* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VECTOR3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VECTOR3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VECTOR3& from) {
    VECTOR3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VECTOR3* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "VECTOR3";
  }
  protected:
  explicit VECTOR3(::google::protobuf::Arena* arena);
  VECTOR3(::google::protobuf::Arena* arena, const VECTOR3& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:VECTOR3)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float x_;
    float y_;
    float z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_SEEPLAYERMOVE final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SEEPLAYERMOVE) */ {
 public:
  inline SC_SEEPLAYERMOVE() : SC_SEEPLAYERMOVE(nullptr) {}
  ~SC_SEEPLAYERMOVE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_SEEPLAYERMOVE(::google::protobuf::internal::ConstantInitialized);

  inline SC_SEEPLAYERMOVE(const SC_SEEPLAYERMOVE& from)
      : SC_SEEPLAYERMOVE(nullptr, from) {}
  SC_SEEPLAYERMOVE(SC_SEEPLAYERMOVE&& from) noexcept
    : SC_SEEPLAYERMOVE() {
    *this = ::std::move(from);
  }

  inline SC_SEEPLAYERMOVE& operator=(const SC_SEEPLAYERMOVE& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_SEEPLAYERMOVE& operator=(SC_SEEPLAYERMOVE&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_SEEPLAYERMOVE& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_SEEPLAYERMOVE* internal_default_instance() {
    return reinterpret_cast<const SC_SEEPLAYERMOVE*>(
               &_SC_SEEPLAYERMOVE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SC_SEEPLAYERMOVE& a, SC_SEEPLAYERMOVE& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_SEEPLAYERMOVE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_SEEPLAYERMOVE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_SEEPLAYERMOVE* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_SEEPLAYERMOVE>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_SEEPLAYERMOVE& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_SEEPLAYERMOVE& from) {
    SC_SEEPLAYERMOVE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_SEEPLAYERMOVE* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_SEEPLAYERMOVE";
  }
  protected:
  explicit SC_SEEPLAYERMOVE(::google::protobuf::Arena* arena);
  SC_SEEPLAYERMOVE(::google::protobuf::Arena* arena, const SC_SEEPLAYERMOVE& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kPosXFieldNumber = 2,
    kPosYFieldNumber = 3,
    kPosZFieldNumber = 4,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float posX = 2;
  void clear_posx() ;
  float posx() const;
  void set_posx(float value);

  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);

  public:
  // float posY = 3;
  void clear_posy() ;
  float posy() const;
  void set_posy(float value);

  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);

  public:
  // float posZ = 4;
  void clear_posz() ;
  float posz() const;
  void set_posz(float value);

  private:
  float _internal_posz() const;
  void _internal_set_posz(float value);

  public:
  // @@protoc_insertion_point(class_scope:SC_SEEPLAYERMOVE)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    float posx_;
    float posy_;
    float posz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_OTHERCLIENTLOGIN final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OTHERCLIENTLOGIN) */ {
 public:
  inline SC_OTHERCLIENTLOGIN() : SC_OTHERCLIENTLOGIN(nullptr) {}
  ~SC_OTHERCLIENTLOGIN() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_OTHERCLIENTLOGIN(::google::protobuf::internal::ConstantInitialized);

  inline SC_OTHERCLIENTLOGIN(const SC_OTHERCLIENTLOGIN& from)
      : SC_OTHERCLIENTLOGIN(nullptr, from) {}
  SC_OTHERCLIENTLOGIN(SC_OTHERCLIENTLOGIN&& from) noexcept
    : SC_OTHERCLIENTLOGIN() {
    *this = ::std::move(from);
  }

  inline SC_OTHERCLIENTLOGIN& operator=(const SC_OTHERCLIENTLOGIN& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_OTHERCLIENTLOGIN& operator=(SC_OTHERCLIENTLOGIN&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_OTHERCLIENTLOGIN& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_OTHERCLIENTLOGIN* internal_default_instance() {
    return reinterpret_cast<const SC_OTHERCLIENTLOGIN*>(
               &_SC_OTHERCLIENTLOGIN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SC_OTHERCLIENTLOGIN& a, SC_OTHERCLIENTLOGIN& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_OTHERCLIENTLOGIN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_OTHERCLIENTLOGIN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_OTHERCLIENTLOGIN* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_OTHERCLIENTLOGIN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_OTHERCLIENTLOGIN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_OTHERCLIENTLOGIN& from) {
    SC_OTHERCLIENTLOGIN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_OTHERCLIENTLOGIN* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_OTHERCLIENTLOGIN";
  }
  protected:
  explicit SC_OTHERCLIENTLOGIN(::google::protobuf::Arena* arena);
  SC_OTHERCLIENTLOGIN(::google::protobuf::Arena* arena, const SC_OTHERCLIENTLOGIN& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kCellIndexFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 cellIndex = 2;
  void clear_cellindex() ;
  ::int64_t cellindex() const;
  void set_cellindex(::int64_t value);

  private:
  ::int64_t _internal_cellindex() const;
  void _internal_set_cellindex(::int64_t value);

  public:
  // int64 type = 3;
  void clear_type() ;
  ::int64_t type() const;
  void set_type(::int64_t value);

  private:
  ::int64_t _internal_type() const;
  void _internal_set_type(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_OTHERCLIENTLOGIN)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    ::int64_t cellindex_;
    ::int64_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_MONSTERFIND final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_MONSTERFIND) */ {
 public:
  inline SC_MONSTERFIND() : SC_MONSTERFIND(nullptr) {}
  ~SC_MONSTERFIND() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_MONSTERFIND(::google::protobuf::internal::ConstantInitialized);

  inline SC_MONSTERFIND(const SC_MONSTERFIND& from)
      : SC_MONSTERFIND(nullptr, from) {}
  SC_MONSTERFIND(SC_MONSTERFIND&& from) noexcept
    : SC_MONSTERFIND() {
    *this = ::std::move(from);
  }

  inline SC_MONSTERFIND& operator=(const SC_MONSTERFIND& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_MONSTERFIND& operator=(SC_MONSTERFIND&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_MONSTERFIND& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_MONSTERFIND* internal_default_instance() {
    return reinterpret_cast<const SC_MONSTERFIND*>(
               &_SC_MONSTERFIND_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SC_MONSTERFIND& a, SC_MONSTERFIND& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_MONSTERFIND* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_MONSTERFIND* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_MONSTERFIND* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_MONSTERFIND>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_MONSTERFIND& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_MONSTERFIND& from) {
    SC_MONSTERFIND::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_MONSTERFIND* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_MONSTERFIND";
  }
  protected:
  explicit SC_MONSTERFIND(::google::protobuf::Arena* arena);
  SC_MONSTERFIND(::google::protobuf::Arena* arena, const SC_MONSTERFIND& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kFindtypeFieldNumber = 2,
    kTargetIDFieldNumber = 3,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 findtype = 2;
  void clear_findtype() ;
  ::int64_t findtype() const;
  void set_findtype(::int64_t value);

  private:
  ::int64_t _internal_findtype() const;
  void _internal_set_findtype(::int64_t value);

  public:
  // int64 targetID = 3;
  void clear_targetid() ;
  ::int64_t targetid() const;
  void set_targetid(::int64_t value);

  private:
  ::int64_t _internal_targetid() const;
  void _internal_set_targetid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_MONSTERFIND)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    ::int64_t findtype_;
    ::int64_t targetid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_DAMAGED final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_DAMAGED) */ {
 public:
  inline SC_DAMAGED() : SC_DAMAGED(nullptr) {}
  ~SC_DAMAGED() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_DAMAGED(::google::protobuf::internal::ConstantInitialized);

  inline SC_DAMAGED(const SC_DAMAGED& from)
      : SC_DAMAGED(nullptr, from) {}
  SC_DAMAGED(SC_DAMAGED&& from) noexcept
    : SC_DAMAGED() {
    *this = ::std::move(from);
  }

  inline SC_DAMAGED& operator=(const SC_DAMAGED& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_DAMAGED& operator=(SC_DAMAGED&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_DAMAGED& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_DAMAGED* internal_default_instance() {
    return reinterpret_cast<const SC_DAMAGED*>(
               &_SC_DAMAGED_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SC_DAMAGED& a, SC_DAMAGED& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_DAMAGED* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_DAMAGED* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_DAMAGED* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_DAMAGED>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_DAMAGED& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_DAMAGED& from) {
    SC_DAMAGED::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_DAMAGED* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_DAMAGED";
  }
  protected:
  explicit SC_DAMAGED(::google::protobuf::Arena* arena);
  SC_DAMAGED(::google::protobuf::Arena* arena, const SC_DAMAGED& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kCurhpFieldNumber = 2,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float curhp = 2;
  void clear_curhp() ;
  float curhp() const;
  void set_curhp(float value);

  private:
  float _internal_curhp() const;
  void _internal_set_curhp(float value);

  public:
  // @@protoc_insertion_point(class_scope:SC_DAMAGED)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    float curhp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class SC_CONNECTSUCCESS final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CONNECTSUCCESS) */ {
 public:
  inline SC_CONNECTSUCCESS() : SC_CONNECTSUCCESS(nullptr) {}
  ~SC_CONNECTSUCCESS() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SC_CONNECTSUCCESS(::google::protobuf::internal::ConstantInitialized);

  inline SC_CONNECTSUCCESS(const SC_CONNECTSUCCESS& from)
      : SC_CONNECTSUCCESS(nullptr, from) {}
  SC_CONNECTSUCCESS(SC_CONNECTSUCCESS&& from) noexcept
    : SC_CONNECTSUCCESS() {
    *this = ::std::move(from);
  }

  inline SC_CONNECTSUCCESS& operator=(const SC_CONNECTSUCCESS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_CONNECTSUCCESS& operator=(SC_CONNECTSUCCESS&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SC_CONNECTSUCCESS& default_instance() {
    return *internal_default_instance();
  }
  static inline const SC_CONNECTSUCCESS* internal_default_instance() {
    return reinterpret_cast<const SC_CONNECTSUCCESS*>(
               &_SC_CONNECTSUCCESS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SC_CONNECTSUCCESS& a, SC_CONNECTSUCCESS& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_CONNECTSUCCESS* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_CONNECTSUCCESS* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SC_CONNECTSUCCESS* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SC_CONNECTSUCCESS>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SC_CONNECTSUCCESS& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SC_CONNECTSUCCESS& from) {
    SC_CONNECTSUCCESS::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SC_CONNECTSUCCESS* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SC_CONNECTSUCCESS";
  }
  protected:
  explicit SC_CONNECTSUCCESS(::google::protobuf::Arena* arena);
  SC_CONNECTSUCCESS(::google::protobuf::Arena* arena, const SC_CONNECTSUCCESS& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kCellIndexFieldNumber = 2,
    kTypeFieldNumber = 4,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 cellIndex = 2;
  void clear_cellindex() ;
  ::int64_t cellindex() const;
  void set_cellindex(::int64_t value);

  private:
  ::int64_t _internal_cellindex() const;
  void _internal_set_cellindex(::int64_t value);

  public:
  // int64 type = 4;
  void clear_type() ;
  ::int64_t type() const;
  void set_type(::int64_t value);

  private:
  ::int64_t _internal_type() const;
  void _internal_set_type(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SC_CONNECTSUCCESS)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    ::int64_t cellindex_;
    ::int64_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class MOBSTATE final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MOBSTATE) */ {
 public:
  inline MOBSTATE() : MOBSTATE(nullptr) {}
  ~MOBSTATE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MOBSTATE(::google::protobuf::internal::ConstantInitialized);

  inline MOBSTATE(const MOBSTATE& from)
      : MOBSTATE(nullptr, from) {}
  MOBSTATE(MOBSTATE&& from) noexcept
    : MOBSTATE() {
    *this = ::std::move(from);
  }

  inline MOBSTATE& operator=(const MOBSTATE& from) {
    CopyFrom(from);
    return *this;
  }
  inline MOBSTATE& operator=(MOBSTATE&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MOBSTATE& default_instance() {
    return *internal_default_instance();
  }
  static inline const MOBSTATE* internal_default_instance() {
    return reinterpret_cast<const MOBSTATE*>(
               &_MOBSTATE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MOBSTATE& a, MOBSTATE& b) {
    a.Swap(&b);
  }
  inline void Swap(MOBSTATE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MOBSTATE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MOBSTATE* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MOBSTATE>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MOBSTATE& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MOBSTATE& from) {
    MOBSTATE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MOBSTATE* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "MOBSTATE";
  }
  protected:
  explicit MOBSTATE(::google::protobuf::Arena* arena);
  MOBSTATE(::google::protobuf::Arena* arena, const MOBSTATE& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kPosXFieldNumber = 2,
    kPosYFieldNumber = 3,
    kPosZFieldNumber = 4,
    kRotateXFieldNumber = 5,
    kRotateYFieldNumber = 6,
    kRotateZFieldNumber = 7,
    kAnimationIndexFieldNumber = 8,
    kStateFieldNumber = 9,
    kAnimtimeFieldNumber = 14,
    kTriggerOnFieldNumber = 10,
    kFoundOnFieldNumber = 11,
    kRemain1FieldNumber = 12,
    kRemain2FieldNumber = 13,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float posX = 2;
  void clear_posx() ;
  float posx() const;
  void set_posx(float value);

  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);

  public:
  // float posY = 3;
  void clear_posy() ;
  float posy() const;
  void set_posy(float value);

  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);

  public:
  // float posZ = 4;
  void clear_posz() ;
  float posz() const;
  void set_posz(float value);

  private:
  float _internal_posz() const;
  void _internal_set_posz(float value);

  public:
  // float rotateX = 5;
  void clear_rotatex() ;
  float rotatex() const;
  void set_rotatex(float value);

  private:
  float _internal_rotatex() const;
  void _internal_set_rotatex(float value);

  public:
  // float rotateY = 6;
  void clear_rotatey() ;
  float rotatey() const;
  void set_rotatey(float value);

  private:
  float _internal_rotatey() const;
  void _internal_set_rotatey(float value);

  public:
  // float rotateZ = 7;
  void clear_rotatez() ;
  float rotatez() const;
  void set_rotatez(float value);

  private:
  float _internal_rotatez() const;
  void _internal_set_rotatez(float value);

  public:
  // int64 animationIndex = 8;
  void clear_animationindex() ;
  ::int64_t animationindex() const;
  void set_animationindex(::int64_t value);

  private:
  ::int64_t _internal_animationindex() const;
  void _internal_set_animationindex(::int64_t value);

  public:
  // int64 state = 9;
  void clear_state() ;
  ::int64_t state() const;
  void set_state(::int64_t value);

  private:
  ::int64_t _internal_state() const;
  void _internal_set_state(::int64_t value);

  public:
  // double animtime = 14;
  void clear_animtime() ;
  double animtime() const;
  void set_animtime(double value);

  private:
  double _internal_animtime() const;
  void _internal_set_animtime(double value);

  public:
  // bool triggerOn = 10;
  void clear_triggeron() ;
  bool triggeron() const;
  void set_triggeron(bool value);

  private:
  bool _internal_triggeron() const;
  void _internal_set_triggeron(bool value);

  public:
  // bool foundOn = 11;
  void clear_foundon() ;
  bool foundon() const;
  void set_foundon(bool value);

  private:
  bool _internal_foundon() const;
  void _internal_set_foundon(bool value);

  public:
  // bool remain1 = 12;
  void clear_remain1() ;
  bool remain1() const;
  void set_remain1(bool value);

  private:
  bool _internal_remain1() const;
  void _internal_set_remain1(bool value);

  public:
  // bool remain2 = 13;
  void clear_remain2() ;
  bool remain2() const;
  void set_remain2(bool value);

  private:
  bool _internal_remain2() const;
  void _internal_set_remain2(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MOBSTATE)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    float posx_;
    float posy_;
    float posz_;
    float rotatex_;
    float rotatey_;
    float rotatez_;
    ::int64_t animationindex_;
    ::int64_t state_;
    double animtime_;
    bool triggeron_;
    bool foundon_;
    bool remain1_;
    bool remain2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class EQINFO final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EQINFO) */ {
 public:
  inline EQINFO() : EQINFO(nullptr) {}
  ~EQINFO() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EQINFO(::google::protobuf::internal::ConstantInitialized);

  inline EQINFO(const EQINFO& from)
      : EQINFO(nullptr, from) {}
  EQINFO(EQINFO&& from) noexcept
    : EQINFO() {
    *this = ::std::move(from);
  }

  inline EQINFO& operator=(const EQINFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline EQINFO& operator=(EQINFO&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EQINFO& default_instance() {
    return *internal_default_instance();
  }
  static inline const EQINFO* internal_default_instance() {
    return reinterpret_cast<const EQINFO*>(
               &_EQINFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EQINFO& a, EQINFO& b) {
    a.Swap(&b);
  }
  inline void Swap(EQINFO* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EQINFO* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EQINFO* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EQINFO>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EQINFO& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EQINFO& from) {
    EQINFO::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EQINFO* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "EQINFO";
  }
  protected:
  explicit EQINFO(::google::protobuf::Arena* arena);
  EQINFO(::google::protobuf::Arena* arena, const EQINFO& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldFieldNumber = 1,
    kIncreasePowerFieldNumber = 2,
    kIncreaseDefensiveFieldNumber = 3,
    kIncreaseHpFieldNumber = 4,
  };
  // float gold = 1;
  void clear_gold() ;
  float gold() const;
  void set_gold(float value);

  private:
  float _internal_gold() const;
  void _internal_set_gold(float value);

  public:
  // float increasePower = 2;
  void clear_increasepower() ;
  float increasepower() const;
  void set_increasepower(float value);

  private:
  float _internal_increasepower() const;
  void _internal_set_increasepower(float value);

  public:
  // float increaseDefensive = 3;
  void clear_increasedefensive() ;
  float increasedefensive() const;
  void set_increasedefensive(float value);

  private:
  float _internal_increasedefensive() const;
  void _internal_set_increasedefensive(float value);

  public:
  // float increaseHp = 4;
  void clear_increasehp() ;
  float increasehp() const;
  void set_increasehp(float value);

  private:
  float _internal_increasehp() const;
  void _internal_set_increasehp(float value);

  public:
  // @@protoc_insertion_point(class_scope:EQINFO)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float gold_;
    float increasepower_;
    float increasedefensive_;
    float increasehp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CS_LOGIN final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LOGIN) */ {
 public:
  inline CS_LOGIN() : CS_LOGIN(nullptr) {}
  ~CS_LOGIN() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CS_LOGIN(::google::protobuf::internal::ConstantInitialized);

  inline CS_LOGIN(const CS_LOGIN& from)
      : CS_LOGIN(nullptr, from) {}
  CS_LOGIN(CS_LOGIN&& from) noexcept
    : CS_LOGIN() {
    *this = ::std::move(from);
  }

  inline CS_LOGIN& operator=(const CS_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_LOGIN& operator=(CS_LOGIN&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_LOGIN& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_LOGIN* internal_default_instance() {
    return reinterpret_cast<const CS_LOGIN*>(
               &_CS_LOGIN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CS_LOGIN& a, CS_LOGIN& b) {
    a.Swap(&b);
  }
  inline void Swap(CS_LOGIN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_LOGIN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_LOGIN* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CS_LOGIN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_LOGIN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CS_LOGIN& from) {
    CS_LOGIN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CS_LOGIN* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CS_LOGIN";
  }
  protected:
  explicit CS_LOGIN(::google::protobuf::Arena* arena);
  CS_LOGIN(::google::protobuf::Arena* arena, const CS_LOGIN& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CS_LOGIN)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CS_DISCONNECT final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_DISCONNECT) */ {
 public:
  inline CS_DISCONNECT() : CS_DISCONNECT(nullptr) {}
  ~CS_DISCONNECT() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CS_DISCONNECT(::google::protobuf::internal::ConstantInitialized);

  inline CS_DISCONNECT(const CS_DISCONNECT& from)
      : CS_DISCONNECT(nullptr, from) {}
  CS_DISCONNECT(CS_DISCONNECT&& from) noexcept
    : CS_DISCONNECT() {
    *this = ::std::move(from);
  }

  inline CS_DISCONNECT& operator=(const CS_DISCONNECT& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_DISCONNECT& operator=(CS_DISCONNECT&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_DISCONNECT& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_DISCONNECT* internal_default_instance() {
    return reinterpret_cast<const CS_DISCONNECT*>(
               &_CS_DISCONNECT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CS_DISCONNECT& a, CS_DISCONNECT& b) {
    a.Swap(&b);
  }
  inline void Swap(CS_DISCONNECT* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_DISCONNECT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_DISCONNECT* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CS_DISCONNECT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_DISCONNECT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CS_DISCONNECT& from) {
    CS_DISCONNECT::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CS_DISCONNECT* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CS_DISCONNECT";
  }
  protected:
  explicit CS_DISCONNECT(::google::protobuf::Arena* arena);
  CS_DISCONNECT(::google::protobuf::Arena* arena, const CS_DISCONNECT& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CS_DISCONNECT)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class COLLISIONDATA final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COLLISIONDATA) */ {
 public:
  inline COLLISIONDATA() : COLLISIONDATA(nullptr) {}
  ~COLLISIONDATA() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR COLLISIONDATA(::google::protobuf::internal::ConstantInitialized);

  inline COLLISIONDATA(const COLLISIONDATA& from)
      : COLLISIONDATA(nullptr, from) {}
  COLLISIONDATA(COLLISIONDATA&& from) noexcept
    : COLLISIONDATA() {
    *this = ::std::move(from);
  }

  inline COLLISIONDATA& operator=(const COLLISIONDATA& from) {
    CopyFrom(from);
    return *this;
  }
  inline COLLISIONDATA& operator=(COLLISIONDATA&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const COLLISIONDATA& default_instance() {
    return *internal_default_instance();
  }
  static inline const COLLISIONDATA* internal_default_instance() {
    return reinterpret_cast<const COLLISIONDATA*>(
               &_COLLISIONDATA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(COLLISIONDATA& a, COLLISIONDATA& b) {
    a.Swap(&b);
  }
  inline void Swap(COLLISIONDATA* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(COLLISIONDATA* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  COLLISIONDATA* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<COLLISIONDATA>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const COLLISIONDATA& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const COLLISIONDATA& from) {
    COLLISIONDATA::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(COLLISIONDATA* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "COLLISIONDATA";
  }
  protected:
  explicit COLLISIONDATA(::google::protobuf::Arena* arena);
  COLLISIONDATA(::google::protobuf::Arena* arena, const COLLISIONDATA& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kEnemyIDFieldNumber = 2,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 enemyID = 2;
  void clear_enemyid() ;
  ::int64_t enemyid() const;
  void set_enemyid(::int64_t value);

  private:
  ::int64_t _internal_enemyid() const;
  void _internal_set_enemyid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:COLLISIONDATA)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    ::int64_t enemyid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CHARSTATE final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CHARSTATE) */ {
 public:
  inline CHARSTATE() : CHARSTATE(nullptr) {}
  ~CHARSTATE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CHARSTATE(::google::protobuf::internal::ConstantInitialized);

  inline CHARSTATE(const CHARSTATE& from)
      : CHARSTATE(nullptr, from) {}
  CHARSTATE(CHARSTATE&& from) noexcept
    : CHARSTATE() {
    *this = ::std::move(from);
  }

  inline CHARSTATE& operator=(const CHARSTATE& from) {
    CopyFrom(from);
    return *this;
  }
  inline CHARSTATE& operator=(CHARSTATE&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CHARSTATE& default_instance() {
    return *internal_default_instance();
  }
  static inline const CHARSTATE* internal_default_instance() {
    return reinterpret_cast<const CHARSTATE*>(
               &_CHARSTATE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CHARSTATE& a, CHARSTATE& b) {
    a.Swap(&b);
  }
  inline void Swap(CHARSTATE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CHARSTATE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CHARSTATE* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CHARSTATE>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CHARSTATE& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CHARSTATE& from) {
    CHARSTATE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CHARSTATE* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CHARSTATE";
  }
  protected:
  explicit CHARSTATE(::google::protobuf::Arena* arena);
  CHARSTATE(::google::protobuf::Arena* arena, const CHARSTATE& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kPosXFieldNumber = 2,
    kPosYFieldNumber = 3,
    kPosZFieldNumber = 4,
    kRotateXFieldNumber = 5,
    kRotateYFieldNumber = 6,
    kRotateZFieldNumber = 7,
    kAnimationIndexFieldNumber = 8,
    kStateFieldNumber = 9,
    kTriggerOnFieldNumber = 10,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float posX = 2;
  void clear_posx() ;
  float posx() const;
  void set_posx(float value);

  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);

  public:
  // float posY = 3;
  void clear_posy() ;
  float posy() const;
  void set_posy(float value);

  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);

  public:
  // float posZ = 4;
  void clear_posz() ;
  float posz() const;
  void set_posz(float value);

  private:
  float _internal_posz() const;
  void _internal_set_posz(float value);

  public:
  // float rotateX = 5;
  void clear_rotatex() ;
  float rotatex() const;
  void set_rotatex(float value);

  private:
  float _internal_rotatex() const;
  void _internal_set_rotatex(float value);

  public:
  // float rotateY = 6;
  void clear_rotatey() ;
  float rotatey() const;
  void set_rotatey(float value);

  private:
  float _internal_rotatey() const;
  void _internal_set_rotatey(float value);

  public:
  // float rotateZ = 7;
  void clear_rotatez() ;
  float rotatez() const;
  void set_rotatez(float value);

  private:
  float _internal_rotatez() const;
  void _internal_set_rotatez(float value);

  public:
  // int64 animationIndex = 8;
  void clear_animationindex() ;
  ::int64_t animationindex() const;
  void set_animationindex(::int64_t value);

  private:
  ::int64_t _internal_animationindex() const;
  void _internal_set_animationindex(::int64_t value);

  public:
  // int64 state = 9;
  void clear_state() ;
  ::int64_t state() const;
  void set_state(::int64_t value);

  private:
  ::int64_t _internal_state() const;
  void _internal_set_state(::int64_t value);

  public:
  // int64 triggerOn = 10;
  void clear_triggeron() ;
  ::int64_t triggeron() const;
  void set_triggeron(::int64_t value);

  private:
  ::int64_t _internal_triggeron() const;
  void _internal_set_triggeron(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CHARSTATE)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t id_;
    float posx_;
    float posy_;
    float posz_;
    float rotatex_;
    float rotatey_;
    float rotatez_;
    ::int64_t animationindex_;
    ::int64_t state_;
    ::int64_t triggeron_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};// -------------------------------------------------------------------

class CS_ATTACK final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ATTACK) */ {
 public:
  inline CS_ATTACK() : CS_ATTACK(nullptr) {}
  ~CS_ATTACK() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CS_ATTACK(::google::protobuf::internal::ConstantInitialized);

  inline CS_ATTACK(const CS_ATTACK& from)
      : CS_ATTACK(nullptr, from) {}
  CS_ATTACK(CS_ATTACK&& from) noexcept
    : CS_ATTACK() {
    *this = ::std::move(from);
  }

  inline CS_ATTACK& operator=(const CS_ATTACK& from) {
    CopyFrom(from);
    return *this;
  }
  inline CS_ATTACK& operator=(CS_ATTACK&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CS_ATTACK& default_instance() {
    return *internal_default_instance();
  }
  static inline const CS_ATTACK* internal_default_instance() {
    return reinterpret_cast<const CS_ATTACK*>(
               &_CS_ATTACK_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CS_ATTACK& a, CS_ATTACK& b) {
    a.Swap(&b);
  }
  inline void Swap(CS_ATTACK* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CS_ATTACK* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CS_ATTACK* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CS_ATTACK>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CS_ATTACK& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CS_ATTACK& from) {
    CS_ATTACK::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CS_ATTACK* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CS_ATTACK";
  }
  protected:
  explicit CS_ATTACK(::google::protobuf::Arena* arena);
  CS_ATTACK(::google::protobuf::Arena* arena, const CS_ATTACK& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttackPosFieldNumber = 2,
    kIdFieldNumber = 1,
    kDamageFieldNumber = 3,
  };
  // .VECTOR3 attackPos = 2;
  bool has_attackpos() const;
  void clear_attackpos() ;
  const ::VECTOR3& attackpos() const;
  PROTOBUF_NODISCARD ::VECTOR3* release_attackpos();
  ::VECTOR3* mutable_attackpos();
  void set_allocated_attackpos(::VECTOR3* value);
  void unsafe_arena_set_allocated_attackpos(::VECTOR3* value);
  ::VECTOR3* unsafe_arena_release_attackpos();

  private:
  const ::VECTOR3& _internal_attackpos() const;
  ::VECTOR3* _internal_mutable_attackpos();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float damage = 3;
  void clear_damage() ;
  float damage() const;
  void set_damage(float value);

  private:
  float _internal_damage() const;
  void _internal_set_damage(float value);

  public:
  // @@protoc_insertion_point(class_scope:CS_ATTACK)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::VECTOR3* attackpos_;
    ::int64_t id_;
    float damage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VECTOR3

// float x = 1;
inline void VECTOR3::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline float VECTOR3::x() const {
  // @@protoc_insertion_point(field_get:VECTOR3.x)
  return _internal_x();
}
inline void VECTOR3::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:VECTOR3.x)
}
inline float VECTOR3::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void VECTOR3::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float y = 2;
inline void VECTOR3::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline float VECTOR3::y() const {
  // @@protoc_insertion_point(field_get:VECTOR3.y)
  return _internal_y();
}
inline void VECTOR3::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:VECTOR3.y)
}
inline float VECTOR3::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void VECTOR3::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// float z = 3;
inline void VECTOR3::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline float VECTOR3::z() const {
  // @@protoc_insertion_point(field_get:VECTOR3.z)
  return _internal_z();
}
inline void VECTOR3::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:VECTOR3.z)
}
inline float VECTOR3::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void VECTOR3::_internal_set_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// VECTOR4

// float x = 1;
inline void VECTOR4::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline float VECTOR4::x() const {
  // @@protoc_insertion_point(field_get:VECTOR4.x)
  return _internal_x();
}
inline void VECTOR4::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:VECTOR4.x)
}
inline float VECTOR4::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void VECTOR4::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float y = 2;
inline void VECTOR4::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline float VECTOR4::y() const {
  // @@protoc_insertion_point(field_get:VECTOR4.y)
  return _internal_y();
}
inline void VECTOR4::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:VECTOR4.y)
}
inline float VECTOR4::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void VECTOR4::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// float z = 3;
inline void VECTOR4::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline float VECTOR4::z() const {
  // @@protoc_insertion_point(field_get:VECTOR4.z)
  return _internal_z();
}
inline void VECTOR4::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:VECTOR4.z)
}
inline float VECTOR4::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void VECTOR4::_internal_set_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// float w = 4;
inline void VECTOR4::clear_w() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.w_ = 0;
}
inline float VECTOR4::w() const {
  // @@protoc_insertion_point(field_get:VECTOR4.w)
  return _internal_w();
}
inline void VECTOR4::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:VECTOR4.w)
}
inline float VECTOR4::_internal_w() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.w_;
}
inline void VECTOR4::_internal_set_w(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.w_ = value;
}

// -------------------------------------------------------------------

// EQINFO

// float gold = 1;
inline void EQINFO::clear_gold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gold_ = 0;
}
inline float EQINFO::gold() const {
  // @@protoc_insertion_point(field_get:EQINFO.gold)
  return _internal_gold();
}
inline void EQINFO::set_gold(float value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:EQINFO.gold)
}
inline float EQINFO::_internal_gold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gold_;
}
inline void EQINFO::_internal_set_gold(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gold_ = value;
}

// float increasePower = 2;
inline void EQINFO::clear_increasepower() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.increasepower_ = 0;
}
inline float EQINFO::increasepower() const {
  // @@protoc_insertion_point(field_get:EQINFO.increasePower)
  return _internal_increasepower();
}
inline void EQINFO::set_increasepower(float value) {
  _internal_set_increasepower(value);
  // @@protoc_insertion_point(field_set:EQINFO.increasePower)
}
inline float EQINFO::_internal_increasepower() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.increasepower_;
}
inline void EQINFO::_internal_set_increasepower(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.increasepower_ = value;
}

// float increaseDefensive = 3;
inline void EQINFO::clear_increasedefensive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.increasedefensive_ = 0;
}
inline float EQINFO::increasedefensive() const {
  // @@protoc_insertion_point(field_get:EQINFO.increaseDefensive)
  return _internal_increasedefensive();
}
inline void EQINFO::set_increasedefensive(float value) {
  _internal_set_increasedefensive(value);
  // @@protoc_insertion_point(field_set:EQINFO.increaseDefensive)
}
inline float EQINFO::_internal_increasedefensive() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.increasedefensive_;
}
inline void EQINFO::_internal_set_increasedefensive(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.increasedefensive_ = value;
}

// float increaseHp = 4;
inline void EQINFO::clear_increasehp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.increasehp_ = 0;
}
inline float EQINFO::increasehp() const {
  // @@protoc_insertion_point(field_get:EQINFO.increaseHp)
  return _internal_increasehp();
}
inline void EQINFO::set_increasehp(float value) {
  _internal_set_increasehp(value);
  // @@protoc_insertion_point(field_set:EQINFO.increaseHp)
}
inline float EQINFO::_internal_increasehp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.increasehp_;
}
inline void EQINFO::_internal_set_increasehp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.increasehp_ = value;
}

// -------------------------------------------------------------------

// CHARSTATE

// int64 id = 1;
inline void CHARSTATE::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CHARSTATE::id() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.id)
  return _internal_id();
}
inline void CHARSTATE::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.id)
}
inline ::int64_t CHARSTATE::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CHARSTATE::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// float posX = 2;
inline void CHARSTATE::clear_posx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posx_ = 0;
}
inline float CHARSTATE::posx() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.posX)
  return _internal_posx();
}
inline void CHARSTATE::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.posX)
}
inline float CHARSTATE::_internal_posx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posx_;
}
inline void CHARSTATE::_internal_set_posx(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posx_ = value;
}

// float posY = 3;
inline void CHARSTATE::clear_posy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posy_ = 0;
}
inline float CHARSTATE::posy() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.posY)
  return _internal_posy();
}
inline void CHARSTATE::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.posY)
}
inline float CHARSTATE::_internal_posy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posy_;
}
inline void CHARSTATE::_internal_set_posy(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posy_ = value;
}

// float posZ = 4;
inline void CHARSTATE::clear_posz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posz_ = 0;
}
inline float CHARSTATE::posz() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.posZ)
  return _internal_posz();
}
inline void CHARSTATE::set_posz(float value) {
  _internal_set_posz(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.posZ)
}
inline float CHARSTATE::_internal_posz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posz_;
}
inline void CHARSTATE::_internal_set_posz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posz_ = value;
}

// float rotateX = 5;
inline void CHARSTATE::clear_rotatex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotatex_ = 0;
}
inline float CHARSTATE::rotatex() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.rotateX)
  return _internal_rotatex();
}
inline void CHARSTATE::set_rotatex(float value) {
  _internal_set_rotatex(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.rotateX)
}
inline float CHARSTATE::_internal_rotatex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotatex_;
}
inline void CHARSTATE::_internal_set_rotatex(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotatex_ = value;
}

// float rotateY = 6;
inline void CHARSTATE::clear_rotatey() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotatey_ = 0;
}
inline float CHARSTATE::rotatey() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.rotateY)
  return _internal_rotatey();
}
inline void CHARSTATE::set_rotatey(float value) {
  _internal_set_rotatey(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.rotateY)
}
inline float CHARSTATE::_internal_rotatey() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotatey_;
}
inline void CHARSTATE::_internal_set_rotatey(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotatey_ = value;
}

// float rotateZ = 7;
inline void CHARSTATE::clear_rotatez() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotatez_ = 0;
}
inline float CHARSTATE::rotatez() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.rotateZ)
  return _internal_rotatez();
}
inline void CHARSTATE::set_rotatez(float value) {
  _internal_set_rotatez(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.rotateZ)
}
inline float CHARSTATE::_internal_rotatez() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotatez_;
}
inline void CHARSTATE::_internal_set_rotatez(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotatez_ = value;
}

// int64 animationIndex = 8;
inline void CHARSTATE::clear_animationindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.animationindex_ = ::int64_t{0};
}
inline ::int64_t CHARSTATE::animationindex() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.animationIndex)
  return _internal_animationindex();
}
inline void CHARSTATE::set_animationindex(::int64_t value) {
  _internal_set_animationindex(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.animationIndex)
}
inline ::int64_t CHARSTATE::_internal_animationindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.animationindex_;
}
inline void CHARSTATE::_internal_set_animationindex(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.animationindex_ = value;
}

// int64 state = 9;
inline void CHARSTATE::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = ::int64_t{0};
}
inline ::int64_t CHARSTATE::state() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.state)
  return _internal_state();
}
inline void CHARSTATE::set_state(::int64_t value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.state)
}
inline ::int64_t CHARSTATE::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void CHARSTATE::_internal_set_state(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// int64 triggerOn = 10;
inline void CHARSTATE::clear_triggeron() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggeron_ = ::int64_t{0};
}
inline ::int64_t CHARSTATE::triggeron() const {
  // @@protoc_insertion_point(field_get:CHARSTATE.triggerOn)
  return _internal_triggeron();
}
inline void CHARSTATE::set_triggeron(::int64_t value) {
  _internal_set_triggeron(value);
  // @@protoc_insertion_point(field_set:CHARSTATE.triggerOn)
}
inline ::int64_t CHARSTATE::_internal_triggeron() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggeron_;
}
inline void CHARSTATE::_internal_set_triggeron(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.triggeron_ = value;
}

// -------------------------------------------------------------------

// MOBSTATE

// int64 id = 1;
inline void MOBSTATE::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t MOBSTATE::id() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.id)
  return _internal_id();
}
inline void MOBSTATE::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.id)
}
inline ::int64_t MOBSTATE::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void MOBSTATE::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// float posX = 2;
inline void MOBSTATE::clear_posx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posx_ = 0;
}
inline float MOBSTATE::posx() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.posX)
  return _internal_posx();
}
inline void MOBSTATE::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.posX)
}
inline float MOBSTATE::_internal_posx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posx_;
}
inline void MOBSTATE::_internal_set_posx(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posx_ = value;
}

// float posY = 3;
inline void MOBSTATE::clear_posy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posy_ = 0;
}
inline float MOBSTATE::posy() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.posY)
  return _internal_posy();
}
inline void MOBSTATE::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.posY)
}
inline float MOBSTATE::_internal_posy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posy_;
}
inline void MOBSTATE::_internal_set_posy(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posy_ = value;
}

// float posZ = 4;
inline void MOBSTATE::clear_posz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posz_ = 0;
}
inline float MOBSTATE::posz() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.posZ)
  return _internal_posz();
}
inline void MOBSTATE::set_posz(float value) {
  _internal_set_posz(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.posZ)
}
inline float MOBSTATE::_internal_posz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posz_;
}
inline void MOBSTATE::_internal_set_posz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posz_ = value;
}

// float rotateX = 5;
inline void MOBSTATE::clear_rotatex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotatex_ = 0;
}
inline float MOBSTATE::rotatex() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.rotateX)
  return _internal_rotatex();
}
inline void MOBSTATE::set_rotatex(float value) {
  _internal_set_rotatex(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.rotateX)
}
inline float MOBSTATE::_internal_rotatex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotatex_;
}
inline void MOBSTATE::_internal_set_rotatex(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotatex_ = value;
}

// float rotateY = 6;
inline void MOBSTATE::clear_rotatey() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotatey_ = 0;
}
inline float MOBSTATE::rotatey() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.rotateY)
  return _internal_rotatey();
}
inline void MOBSTATE::set_rotatey(float value) {
  _internal_set_rotatey(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.rotateY)
}
inline float MOBSTATE::_internal_rotatey() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotatey_;
}
inline void MOBSTATE::_internal_set_rotatey(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotatey_ = value;
}

// float rotateZ = 7;
inline void MOBSTATE::clear_rotatez() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotatez_ = 0;
}
inline float MOBSTATE::rotatez() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.rotateZ)
  return _internal_rotatez();
}
inline void MOBSTATE::set_rotatez(float value) {
  _internal_set_rotatez(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.rotateZ)
}
inline float MOBSTATE::_internal_rotatez() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotatez_;
}
inline void MOBSTATE::_internal_set_rotatez(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotatez_ = value;
}

// int64 animationIndex = 8;
inline void MOBSTATE::clear_animationindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.animationindex_ = ::int64_t{0};
}
inline ::int64_t MOBSTATE::animationindex() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.animationIndex)
  return _internal_animationindex();
}
inline void MOBSTATE::set_animationindex(::int64_t value) {
  _internal_set_animationindex(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.animationIndex)
}
inline ::int64_t MOBSTATE::_internal_animationindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.animationindex_;
}
inline void MOBSTATE::_internal_set_animationindex(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.animationindex_ = value;
}

// int64 state = 9;
inline void MOBSTATE::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = ::int64_t{0};
}
inline ::int64_t MOBSTATE::state() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.state)
  return _internal_state();
}
inline void MOBSTATE::set_state(::int64_t value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.state)
}
inline ::int64_t MOBSTATE::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void MOBSTATE::_internal_set_state(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// bool triggerOn = 10;
inline void MOBSTATE::clear_triggeron() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggeron_ = false;
}
inline bool MOBSTATE::triggeron() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.triggerOn)
  return _internal_triggeron();
}
inline void MOBSTATE::set_triggeron(bool value) {
  _internal_set_triggeron(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.triggerOn)
}
inline bool MOBSTATE::_internal_triggeron() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggeron_;
}
inline void MOBSTATE::_internal_set_triggeron(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.triggeron_ = value;
}

// bool foundOn = 11;
inline void MOBSTATE::clear_foundon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.foundon_ = false;
}
inline bool MOBSTATE::foundon() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.foundOn)
  return _internal_foundon();
}
inline void MOBSTATE::set_foundon(bool value) {
  _internal_set_foundon(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.foundOn)
}
inline bool MOBSTATE::_internal_foundon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.foundon_;
}
inline void MOBSTATE::_internal_set_foundon(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.foundon_ = value;
}

// bool remain1 = 12;
inline void MOBSTATE::clear_remain1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remain1_ = false;
}
inline bool MOBSTATE::remain1() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.remain1)
  return _internal_remain1();
}
inline void MOBSTATE::set_remain1(bool value) {
  _internal_set_remain1(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.remain1)
}
inline bool MOBSTATE::_internal_remain1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remain1_;
}
inline void MOBSTATE::_internal_set_remain1(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remain1_ = value;
}

// bool remain2 = 13;
inline void MOBSTATE::clear_remain2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remain2_ = false;
}
inline bool MOBSTATE::remain2() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.remain2)
  return _internal_remain2();
}
inline void MOBSTATE::set_remain2(bool value) {
  _internal_set_remain2(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.remain2)
}
inline bool MOBSTATE::_internal_remain2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remain2_;
}
inline void MOBSTATE::_internal_set_remain2(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remain2_ = value;
}

// double animtime = 14;
inline void MOBSTATE::clear_animtime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.animtime_ = 0;
}
inline double MOBSTATE::animtime() const {
  // @@protoc_insertion_point(field_get:MOBSTATE.animtime)
  return _internal_animtime();
}
inline void MOBSTATE::set_animtime(double value) {
  _internal_set_animtime(value);
  // @@protoc_insertion_point(field_set:MOBSTATE.animtime)
}
inline double MOBSTATE::_internal_animtime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.animtime_;
}
inline void MOBSTATE::_internal_set_animtime(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.animtime_ = value;
}

// -------------------------------------------------------------------

// COLLISIONDATA

// int64 id = 1;
inline void COLLISIONDATA::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t COLLISIONDATA::id() const {
  // @@protoc_insertion_point(field_get:COLLISIONDATA.id)
  return _internal_id();
}
inline void COLLISIONDATA::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:COLLISIONDATA.id)
}
inline ::int64_t COLLISIONDATA::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void COLLISIONDATA::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int64 enemyID = 2;
inline void COLLISIONDATA::clear_enemyid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.enemyid_ = ::int64_t{0};
}
inline ::int64_t COLLISIONDATA::enemyid() const {
  // @@protoc_insertion_point(field_get:COLLISIONDATA.enemyID)
  return _internal_enemyid();
}
inline void COLLISIONDATA::set_enemyid(::int64_t value) {
  _internal_set_enemyid(value);
  // @@protoc_insertion_point(field_set:COLLISIONDATA.enemyID)
}
inline ::int64_t COLLISIONDATA::_internal_enemyid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enemyid_;
}
inline void COLLISIONDATA::_internal_set_enemyid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enemyid_ = value;
}

// -------------------------------------------------------------------

// SC_CONNECTSUCCESS

// int64 id = 1;
inline void SC_CONNECTSUCCESS::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_CONNECTSUCCESS::id() const {
  // @@protoc_insertion_point(field_get:SC_CONNECTSUCCESS.id)
  return _internal_id();
}
inline void SC_CONNECTSUCCESS::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_CONNECTSUCCESS.id)
}
inline ::int64_t SC_CONNECTSUCCESS::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_CONNECTSUCCESS::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int64 cellIndex = 2;
inline void SC_CONNECTSUCCESS::clear_cellindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cellindex_ = ::int64_t{0};
}
inline ::int64_t SC_CONNECTSUCCESS::cellindex() const {
  // @@protoc_insertion_point(field_get:SC_CONNECTSUCCESS.cellIndex)
  return _internal_cellindex();
}
inline void SC_CONNECTSUCCESS::set_cellindex(::int64_t value) {
  _internal_set_cellindex(value);
  // @@protoc_insertion_point(field_set:SC_CONNECTSUCCESS.cellIndex)
}
inline ::int64_t SC_CONNECTSUCCESS::_internal_cellindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cellindex_;
}
inline void SC_CONNECTSUCCESS::_internal_set_cellindex(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cellindex_ = value;
}

// int64 type = 4;
inline void SC_CONNECTSUCCESS::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = ::int64_t{0};
}
inline ::int64_t SC_CONNECTSUCCESS::type() const {
  // @@protoc_insertion_point(field_get:SC_CONNECTSUCCESS.type)
  return _internal_type();
}
inline void SC_CONNECTSUCCESS::set_type(::int64_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SC_CONNECTSUCCESS.type)
}
inline ::int64_t SC_CONNECTSUCCESS::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void SC_CONNECTSUCCESS::_internal_set_type(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// SC_OTHERCLIENTLOGIN

// int64 id = 1;
inline void SC_OTHERCLIENTLOGIN::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_OTHERCLIENTLOGIN::id() const {
  // @@protoc_insertion_point(field_get:SC_OTHERCLIENTLOGIN.id)
  return _internal_id();
}
inline void SC_OTHERCLIENTLOGIN::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_OTHERCLIENTLOGIN.id)
}
inline ::int64_t SC_OTHERCLIENTLOGIN::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_OTHERCLIENTLOGIN::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int64 cellIndex = 2;
inline void SC_OTHERCLIENTLOGIN::clear_cellindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cellindex_ = ::int64_t{0};
}
inline ::int64_t SC_OTHERCLIENTLOGIN::cellindex() const {
  // @@protoc_insertion_point(field_get:SC_OTHERCLIENTLOGIN.cellIndex)
  return _internal_cellindex();
}
inline void SC_OTHERCLIENTLOGIN::set_cellindex(::int64_t value) {
  _internal_set_cellindex(value);
  // @@protoc_insertion_point(field_set:SC_OTHERCLIENTLOGIN.cellIndex)
}
inline ::int64_t SC_OTHERCLIENTLOGIN::_internal_cellindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cellindex_;
}
inline void SC_OTHERCLIENTLOGIN::_internal_set_cellindex(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cellindex_ = value;
}

// int64 type = 3;
inline void SC_OTHERCLIENTLOGIN::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = ::int64_t{0};
}
inline ::int64_t SC_OTHERCLIENTLOGIN::type() const {
  // @@protoc_insertion_point(field_get:SC_OTHERCLIENTLOGIN.type)
  return _internal_type();
}
inline void SC_OTHERCLIENTLOGIN::set_type(::int64_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SC_OTHERCLIENTLOGIN.type)
}
inline ::int64_t SC_OTHERCLIENTLOGIN::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void SC_OTHERCLIENTLOGIN::_internal_set_type(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// SC_MONSTERFIND

// int64 id = 1;
inline void SC_MONSTERFIND::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_MONSTERFIND::id() const {
  // @@protoc_insertion_point(field_get:SC_MONSTERFIND.id)
  return _internal_id();
}
inline void SC_MONSTERFIND::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_MONSTERFIND.id)
}
inline ::int64_t SC_MONSTERFIND::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_MONSTERFIND::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int64 findtype = 2;
inline void SC_MONSTERFIND::clear_findtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.findtype_ = ::int64_t{0};
}
inline ::int64_t SC_MONSTERFIND::findtype() const {
  // @@protoc_insertion_point(field_get:SC_MONSTERFIND.findtype)
  return _internal_findtype();
}
inline void SC_MONSTERFIND::set_findtype(::int64_t value) {
  _internal_set_findtype(value);
  // @@protoc_insertion_point(field_set:SC_MONSTERFIND.findtype)
}
inline ::int64_t SC_MONSTERFIND::_internal_findtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.findtype_;
}
inline void SC_MONSTERFIND::_internal_set_findtype(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.findtype_ = value;
}

// int64 targetID = 3;
inline void SC_MONSTERFIND::clear_targetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.targetid_ = ::int64_t{0};
}
inline ::int64_t SC_MONSTERFIND::targetid() const {
  // @@protoc_insertion_point(field_get:SC_MONSTERFIND.targetID)
  return _internal_targetid();
}
inline void SC_MONSTERFIND::set_targetid(::int64_t value) {
  _internal_set_targetid(value);
  // @@protoc_insertion_point(field_set:SC_MONSTERFIND.targetID)
}
inline ::int64_t SC_MONSTERFIND::_internal_targetid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.targetid_;
}
inline void SC_MONSTERFIND::_internal_set_targetid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.targetid_ = value;
}

// -------------------------------------------------------------------

// SC_DAMAGED

// int64 id = 1;
inline void SC_DAMAGED::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_DAMAGED::id() const {
  // @@protoc_insertion_point(field_get:SC_DAMAGED.id)
  return _internal_id();
}
inline void SC_DAMAGED::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_DAMAGED.id)
}
inline ::int64_t SC_DAMAGED::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_DAMAGED::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// float curhp = 2;
inline void SC_DAMAGED::clear_curhp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.curhp_ = 0;
}
inline float SC_DAMAGED::curhp() const {
  // @@protoc_insertion_point(field_get:SC_DAMAGED.curhp)
  return _internal_curhp();
}
inline void SC_DAMAGED::set_curhp(float value) {
  _internal_set_curhp(value);
  // @@protoc_insertion_point(field_set:SC_DAMAGED.curhp)
}
inline float SC_DAMAGED::_internal_curhp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.curhp_;
}
inline void SC_DAMAGED::_internal_set_curhp(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.curhp_ = value;
}

// -------------------------------------------------------------------

// SC_SEEPLAYERMOVE

// int64 id = 1;
inline void SC_SEEPLAYERMOVE::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SC_SEEPLAYERMOVE::id() const {
  // @@protoc_insertion_point(field_get:SC_SEEPLAYERMOVE.id)
  return _internal_id();
}
inline void SC_SEEPLAYERMOVE::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SC_SEEPLAYERMOVE.id)
}
inline ::int64_t SC_SEEPLAYERMOVE::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SC_SEEPLAYERMOVE::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// float posX = 2;
inline void SC_SEEPLAYERMOVE::clear_posx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posx_ = 0;
}
inline float SC_SEEPLAYERMOVE::posx() const {
  // @@protoc_insertion_point(field_get:SC_SEEPLAYERMOVE.posX)
  return _internal_posx();
}
inline void SC_SEEPLAYERMOVE::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:SC_SEEPLAYERMOVE.posX)
}
inline float SC_SEEPLAYERMOVE::_internal_posx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posx_;
}
inline void SC_SEEPLAYERMOVE::_internal_set_posx(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posx_ = value;
}

// float posY = 3;
inline void SC_SEEPLAYERMOVE::clear_posy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posy_ = 0;
}
inline float SC_SEEPLAYERMOVE::posy() const {
  // @@protoc_insertion_point(field_get:SC_SEEPLAYERMOVE.posY)
  return _internal_posy();
}
inline void SC_SEEPLAYERMOVE::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:SC_SEEPLAYERMOVE.posY)
}
inline float SC_SEEPLAYERMOVE::_internal_posy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posy_;
}
inline void SC_SEEPLAYERMOVE::_internal_set_posy(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posy_ = value;
}

// float posZ = 4;
inline void SC_SEEPLAYERMOVE::clear_posz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.posz_ = 0;
}
inline float SC_SEEPLAYERMOVE::posz() const {
  // @@protoc_insertion_point(field_get:SC_SEEPLAYERMOVE.posZ)
  return _internal_posz();
}
inline void SC_SEEPLAYERMOVE::set_posz(float value) {
  _internal_set_posz(value);
  // @@protoc_insertion_point(field_set:SC_SEEPLAYERMOVE.posZ)
}
inline float SC_SEEPLAYERMOVE::_internal_posz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.posz_;
}
inline void SC_SEEPLAYERMOVE::_internal_set_posz(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.posz_ = value;
}

// -------------------------------------------------------------------

// CS_LOGIN

// int64 id = 1;
inline void CS_LOGIN::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CS_LOGIN::id() const {
  // @@protoc_insertion_point(field_get:CS_LOGIN.id)
  return _internal_id();
}
inline void CS_LOGIN::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CS_LOGIN.id)
}
inline ::int64_t CS_LOGIN::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CS_LOGIN::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// CS_ATTACK

// int64 id = 1;
inline void CS_ATTACK::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CS_ATTACK::id() const {
  // @@protoc_insertion_point(field_get:CS_ATTACK.id)
  return _internal_id();
}
inline void CS_ATTACK::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CS_ATTACK.id)
}
inline ::int64_t CS_ATTACK::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CS_ATTACK::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .VECTOR3 attackPos = 2;
inline bool CS_ATTACK::has_attackpos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attackpos_ != nullptr);
  return value;
}
inline void CS_ATTACK::clear_attackpos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.attackpos_ != nullptr) _impl_.attackpos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::VECTOR3& CS_ATTACK::_internal_attackpos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::VECTOR3* p = _impl_.attackpos_;
  return p != nullptr ? *p : reinterpret_cast<const ::VECTOR3&>(::_VECTOR3_default_instance_);
}
inline const ::VECTOR3& CS_ATTACK::attackpos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CS_ATTACK.attackPos)
  return _internal_attackpos();
}
inline void CS_ATTACK::unsafe_arena_set_allocated_attackpos(::VECTOR3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attackpos_);
  }
  _impl_.attackpos_ = reinterpret_cast<::VECTOR3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CS_ATTACK.attackPos)
}
inline ::VECTOR3* CS_ATTACK::release_attackpos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::VECTOR3* released = _impl_.attackpos_;
  _impl_.attackpos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::VECTOR3* CS_ATTACK::unsafe_arena_release_attackpos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CS_ATTACK.attackPos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::VECTOR3* temp = _impl_.attackpos_;
  _impl_.attackpos_ = nullptr;
  return temp;
}
inline ::VECTOR3* CS_ATTACK::_internal_mutable_attackpos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.attackpos_ == nullptr) {
    auto* p = CreateMaybeMessage<::VECTOR3>(GetArena());
    _impl_.attackpos_ = reinterpret_cast<::VECTOR3*>(p);
  }
  return _impl_.attackpos_;
}
inline ::VECTOR3* CS_ATTACK::mutable_attackpos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::VECTOR3* _msg = _internal_mutable_attackpos();
  // @@protoc_insertion_point(field_mutable:CS_ATTACK.attackPos)
  return _msg;
}
inline void CS_ATTACK::set_allocated_attackpos(::VECTOR3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::VECTOR3*>(_impl_.attackpos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::VECTOR3*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.attackpos_ = reinterpret_cast<::VECTOR3*>(value);
  // @@protoc_insertion_point(field_set_allocated:CS_ATTACK.attackPos)
}

// float damage = 3;
inline void CS_ATTACK::clear_damage() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.damage_ = 0;
}
inline float CS_ATTACK::damage() const {
  // @@protoc_insertion_point(field_get:CS_ATTACK.damage)
  return _internal_damage();
}
inline void CS_ATTACK::set_damage(float value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CS_ATTACK.damage)
}
inline float CS_ATTACK::_internal_damage() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damage_;
}
inline void CS_ATTACK::_internal_set_damage(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.damage_ = value;
}

// -------------------------------------------------------------------

// CS_DISCONNECT

// int64 id = 1;
inline void CS_DISCONNECT::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CS_DISCONNECT::id() const {
  // @@protoc_insertion_point(field_get:CS_DISCONNECT.id)
  return _internal_id();
}
inline void CS_DISCONNECT::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CS_DISCONNECT.id)
}
inline ::int64_t CS_DISCONNECT::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CS_DISCONNECT::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Direction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Direction>() {
  return ::Direction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
