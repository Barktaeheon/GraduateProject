// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tag.proto

#include "Tag.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Tag_2eproto[7];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Tag_2eproto = nullptr;
const ::uint32_t TableStruct_Tag_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_Tag_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\tTag.proto*\246\002\n\006TAG_CS\022\020\n\014TAG_CS_DUMMY\020\000"
    "\022\020\n\014TAG_CS_LOGIN\020\001\022\021\n\rTAG_CS_LOGOUT\020\002\022\017\n"
    "\013TAG_CS_MOVE\020\003\022\026\n\022TAG_CS_PLAYERSTATE\020\004\022\032"
    "\n\026TAG_CS_PLAYERCOLLISION\020\005\022\033\n\027TAG_CS_MON"
    "STERCOLIISION\020\006\022\027\n\023TAG_CS_MONSTERSTATE\020\007"
    "\022\022\n\016TAG_CS_DAMAGED\020\010\022\017\n\013TAG_CS_HEAL\020\t\022\026\n"
    "\022TAG_CS_PLAYERORDER\020\n\022\030\n\024TAG_CS_PLAYERDA"
    "MAGED\020\013\022\023\n\017TAG_CS_PRESSKEY\020\014*\301\002\n\006TAG_SC\022"
    "\020\n\014TAG_SC_DUMMY\020\000\022\031\n\025TAG_SC_CONNECTSUCCE"
    "SS\020\001\022\033\n\027TAG_SC_OTHERCLIENTLOGIN\020\002\022\026\n\022TAG"
    "_SC_PLAYERSTATE\020\003\022\024\n\020TAG_SC_COLLISION\020\004\022"
    "\026\n\022TAG_SC_MONSTERFIND\020\005\022\022\n\016TAG_SC_DAMAGE"
    "D\020\006\022\027\n\023TAG_SC_MONSTERSTATE\020\007\022\031\n\025TAG_SC_S"
    "ELFPLAYERMOVE\020\010\022\017\n\013TAG_SC_DEAD\020\t\022\030\n\024TAG_"
    "SC_STATICOBJFIND\020\n\022\034\n\030TAG_SC_HARLEQUINTH"
    "ROWING\020\013\022\026\n\022TAG_SC_ANUBISSTATE\020\014*\376\001\n\010TAG"
    "_CHAR\022\r\n\tTAG_DUMMY\020\000\022\022\n\016TAG_MAINPLAYER\020\001"
    "\022\023\n\017TAG_OTHERPLAYER\020\002\022\024\n\020TAG_MUMMY_LAYIN"
    "G\020\003\022\026\n\022TAG_MUMMY_STANDING\020\004\022\032\n\026TAG_SARCO"
    "PHAGUS_LAYING\020\005\022\034\n\030TAG_SARCOPHAGUS_STAND"
    "ING\020\006\022\r\n\tTAG_CHEST\020\007\022\r\n\tTAG_MIMIC\020\010\022\016\n\nT"
    "AG_ANUBIS\020\t\022\022\n\016TAG_HARLEQUINN\020\n\022\020\n\014TAG_M"
    "INOTAUR\020\013*\203\001\n\rTAG_STATICOBJ\022\020\n\014TAG_DUMMY"
    "OBJ\020\000\022\017\n\013TAG_IRONBAR\020\001\022\016\n\nTAG_STATUE\020\002\022\022"
    "\n\016TAG_COREANUBIS\020\003\022\025\n\021TAG_COREHARLEQUIN\020"
    "\004\022\024\n\020TAG_COREMINOTAUR\020\005*C\n\016TAG_PLAYERTYP"
    "E\022\017\n\013TAG_WARRIOR\020\000\022\016\n\nTAG_ARCHOR\020\001\022\020\n\014TA"
    "G_MAGICAIN\020\002*3\n\014TAG_COLLTYPE\022\020\n\014TAG_COLL"
    "_HIT\020\000\022\021\n\rTAG_COLL_JUST\020\001*^\n\014TAG_FINDTYP"
    "E\022\023\n\017TAG_FIND_ACTIVE\020\000\022\021\n\rTAG_FIND_NEAR\020"
    "\001\022\020\n\014TAG_FIND_ATK\020\002\022\024\n\020TAG_FIND_DISABLE\020"
    "\003b\006proto3"
};
static ::absl::once_flag descriptor_table_Tag_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Tag_2eproto = {
    false,
    false,
    1249,
    descriptor_table_protodef_Tag_2eproto,
    "Tag.proto",
    &descriptor_table_Tag_2eproto_once,
    nullptr,
    0,
    0,
    schemas,
    file_default_instances,
    TableStruct_Tag_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_Tag_2eproto,
    file_level_service_descriptors_Tag_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Tag_2eproto_getter() {
  return &descriptor_table_Tag_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Tag_2eproto(&descriptor_table_Tag_2eproto);
const ::google::protobuf::EnumDescriptor* TAG_CS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TAG_CS_internal_data_[] = {
    851968u, 0u, };
bool TAG_CS_IsValid(int value) {
  return 0 <= value && value <= 12;
}
const ::google::protobuf::EnumDescriptor* TAG_SC_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TAG_SC_internal_data_[] = {
    851968u, 0u, };
bool TAG_SC_IsValid(int value) {
  return 0 <= value && value <= 12;
}
const ::google::protobuf::EnumDescriptor* TAG_CHAR_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t TAG_CHAR_internal_data_[] = {
    786432u, 0u, };
bool TAG_CHAR_IsValid(int value) {
  return 0 <= value && value <= 11;
}
const ::google::protobuf::EnumDescriptor* TAG_STATICOBJ_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TAG_STATICOBJ_internal_data_[] = {
    393216u, 0u, };
bool TAG_STATICOBJ_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* TAG_PLAYERTYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t TAG_PLAYERTYPE_internal_data_[] = {
    196608u, 0u, };
bool TAG_PLAYERTYPE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* TAG_COLLTYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t TAG_COLLTYPE_internal_data_[] = {
    131072u, 0u, };
bool TAG_COLLTYPE_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* TAG_FINDTYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Tag_2eproto);
  return file_level_enum_descriptors_Tag_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t TAG_FINDTYPE_internal_data_[] = {
    262144u, 0u, };
bool TAG_FINDTYPE_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
