syntax = "proto3";

enum Direction{
	UP = 0;
	DOWN = 1;
	LEFT = 2;
	RIGHT = 3;
}

message VECTOR3 {
float x = 1;
float y = 2;
float z = 3;
}

message EQINFO
{
	float gold = 1;
	float increasePower = 2;
	float increaseDefensive = 3;
	float increaseHp = 4;
}

/*
======================================
Server
======================================
*/

/*
 클라이언트가 접속에 성공했다는 것
*/
message SC_CONNECTSUCCESS{
	// id 
	int64 id = 1;
	// 시작 위치
	int64 cellIndex = 2;
	// 캐릭터 타입
	int64 type = 4;
}

// 다른 클라이언트가 로그인 했을 때 
message SC_OTHERCLIENTLOGIN 
{
	int64 id = 1;
	int64 cellIndex = 2;
	// 캐릭터 타입
	int64 type = 3;
}

/*
클라이언트에서 움직이는 것이 실패했을 때
*/
message SC_MOVEFAILED
{
	int64 id = 1;
	VECTOR3 prevPos = 3;
}

message SC_PLAYERSTATE
{
	int64			id = 1;
	bool				ifattack = 2;
	bool				jumpingstate = 3;
	int64			animstate = 4;
	int64			movespeed = 5;
	byte			triggername = 6;
}

/*
다른 녀석들이 움직였음
*/
message SC_MOVESTATE 
{
	int64 id = 1;
	VECTOR3 movePos = 2;
	VECTOR3 rotate = 3;
}

/*
다른 녀석들이 시야에 보인다. 
*/

 message SC_VIEWINRANGE
 {
	int64 id = 1;
	VECTOR3 position = 2;
	int64 cellindex = 3;
	int64 type = 4;
 }

/*
======================================
Client
======================================
*/

// Client가 로그인 했음을 다른 클라이언트에게 알린다. 
message CS_LOGIN 
{
	int64 id = 1;
}

// 움직였을 때 전송하는 함수 
message CS_MOVE 
{
	int64 id = 1;
	VECTOR3 movePos = 2;
	VECTOR3 rotate = 3;
}

/*
WarriorPlayerState
*/
message CS_PLAYERSTATE
{
	int64			id = 1;
	bool				ifattack = 2;
	bool				jumpingstate = 3;
	int64			animstate = 4;
	int64			movespeed = 5;
	string			triggername = 6;
}


// 공격했을 때 보내는 함수
message CS_ATTACK
{
	int64 id = 1;
	VECTOR3 attackPos = 2;
	float damage = 3;
}

// 연결 해제
message CS_DISCONNECT 
{
	int64 id = 1;
}

