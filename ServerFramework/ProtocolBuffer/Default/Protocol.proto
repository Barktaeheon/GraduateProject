syntax = "proto3";

enum Direction{
	UP = 0;
	DOWN = 1;
	LEFT = 2;
	RIGHT = 3;
}

message VECTOR3 {
float x = 1;
float y = 2;
float z = 3;
}

message VECTOR4
{
	float x = 1;
	float y = 2;
	float z = 3;
	float w = 4;
}

message EQINFO
{
	float gold = 1;
	float increasePower = 2;
	float increaseDefensive = 3;
	float increaseHp = 4;
}

 /*
WarriorPlayerState
*/
message PLAYERSTATE
{
	int64			id = 1;
	bool				ifattack = 2;
	int64			animstate = 3;
	int64			movespeed = 4;
	double		animationTime = 5;
	int64			animationIndex = 6;
}

// 자기 자신이 움직였을 때의 패킷
message SELFPLAYERMOVE
{
	int64 id = 1;
	float moveX = 2;
	float moveY = 3;
	float moveZ = 4;
}

// 움직였을 때 전송하는 함수 
message CHARMOVE
{
	int64 id = 1;
	// Move
	float moveX = 2;
	float moveY = 3;
	float moveZ = 4;
	// Rotate
	float rotateX = 5;
	float rotateY = 6;
	float rotateZ = 7;
}

/*
======================================
Server
======================================
*/

/*
 클라이언트가 접속에 성공했다는 것
*/
message SC_CONNECTSUCCESS{
	// id 
	int64 id = 1;
	// 시작 위치
	int64 cellIndex = 2;
	// 캐릭터 타입
	int64 type = 4;
}

// 다른 클라이언트가 로그인 했을 때 
message SC_OTHERCLIENTLOGIN 
{
	int64 id = 1;
	int64 cellIndex = 2;
	// 캐릭터 타입
	int64 type = 3;
}

message SC_MONSTERRESOURCEDATA
{
	int64 id = 1;
	float posX = 2;
	float posY = 3;
	float posZ = 4;
	int64 animindex = 5;
	int64 cellIndex = 6;
	int64 type = 7;
}

message SC_START_INFORMATION_SUCCESS {
	int64 id = 1;
	int64 monsternum = 2;
}

/*
클라이언트에서 움직이는 것이 실패했을 때
*/
message SC_MOVEFAILED
{
	int64 id = 1;
	VECTOR3 prevPos = 3;
}

/*
다른 녀석들이 시야에 보인다. 
*/

 message SC_VIEWINRANGE
 {
	int64 id = 1;
	VECTOR3 position = 2;
	int64 cellindex = 3;
	int64 type = 4;
 }

 message SC_MONSTERSTATE 
 {
	 int64		id = 1;
	 double	animationTime = 2;
	 int64		animationIndex = 3;
	 int64     state = 4;
 }

 // Monster State 
 message SC_MONSTERSTATEHAVEPOS
 {
	 int64 id = 1;
	float	posX = 2;
	float	posY = 3;
	float	posZ = 4;
	float	rotateX = 5;
	float	rotateY = 6;
	float	rotateZ = 7;
	 double	animationTime = 8;
	 int64		animationIndex = 9;
	 int64     state = 10;
 }

/*
======================================
Client
======================================
*/

// Client가 로그인 했음을 다른 클라이언트에게 알린다. 
message CS_LOGIN 
{
	int64 id = 1;
}

message CS_RESOURCE_RECEIVE_SUCCES 
{
	int64 id = 1;
}

// 공격했을 때 보내는 함수
message CS_ATTACK
{
	int64 id = 1;
	VECTOR3 attackPos = 2;
	float damage = 3;
}

// 몬스터가 맞았는지 판정 
message CS_CHARCOLLISION
{
	int64 id = 1;
	int64 type = 2;
	float damage = 3;
	float rightx = 4;
	float righty = 5;
	float rightz = 6;
	float upx = 7;
	float upy = 8;
	float upz = 9;
	float forwardx = 10;
	float forwardy = 11;
	float forwardz = 12;
	float posx = 13;
	float posy = 14;
	float posz = 15;
	int64 collisionType = 16;
}

// 연결 해제
message CS_DISCONNECT 
{
	int64 id = 1;
}

